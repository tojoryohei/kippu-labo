{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/tojoryohei/my-app/src/component/SerectStation.tsx"],"sourcesContent":["\"use client\";\n\nimport Select, { components, ActionMeta, OptionProps, SingleValue } from \"react-select\";\nimport { useMemo, useState } from \"react\";\nimport stationData from '@/data/station.json';\n\nexport interface OptionType {\n    \"id\": number;\n    \"name\": string;\n    \"kana\": string;\n}\n\nconst CustomOption = (props: OptionProps<OptionType>) => {\n    return (\n        <components.Option {...props}>\n            <div style={{ lineHeight: 1.2, color: \"black\" }}>\n                <span style={{ fontSize: \"0.75rem\", color: \"#888\" }}>\n                    {props.data.kana}\n                </span>\n                <br />\n                {props.data.name}\n            </div>\n        </components.Option>\n    );\n};\n\nconst SelectStation = () => {\n    const allOptions: OptionType[] = stationData;\n    const [selectedValue, setSelectedValue] = useState<OptionType | null>(null);\n    const [inputValue, setInputValue] = useState<string>(\"\");\n\n    const filterOption = (option: any, rawInput: string) => {\n        const input = rawInput.toLowerCase();\n        const target = option.data as OptionType;\n        // Check if the station name or kana starts with the input\n        return (\n            target.name.toLowerCase().startsWith(input) ||\n            target.kana.toLowerCase().startsWith(input)\n        );\n    };\n\n    const handleChange = (\n        newValue: SingleValue<OptionType>,\n        actionMeta: ActionMeta<OptionType>\n    ) => {\n        setSelectedValue(newValue);\n    };\n\n    return (\n        <div style={{ width: \"250px\", margin: \"25px\" }}>\n            <Select\n                instanceId=\"search-select-box\"\n                value={selectedValue}\n                onChange={handleChange}\n                isMulti={false}\n                options={inputValue ? allOptions : []}\n                onInputChange={(input) => setInputValue(input)}\n                getOptionLabel={(option) => option.name}\n                getOptionValue={(option) => option.id.toString()}\n                placeholder=\"駅名を入力してください\"\n                isSearchable={true}\n                filterOption={filterOption}\n                noOptionsMessage={() =>\n                    inputValue ? \"該当する駅がありません\" : null\n                }\n\n                components={{\n                    DropdownIndicator: () => null,\n                    IndicatorSeparator: () => null,\n                    Option: CustomOption,\n                }}\n            />\n        </div>\n    );\n};\n\nexport default SelectStation;\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AACA;;;AAJA;;;;AAYA,MAAM,eAAe,CAAC;IAClB,qBACI,6LAAC,uNAAU,CAAC,MAAM;QAAE,GAAG,KAAK;kBACxB,cAAA,6LAAC;YAAI,OAAO;gBAAE,YAAY;gBAAK,OAAO;YAAQ;;8BAC1C,6LAAC;oBAAK,OAAO;wBAAE,UAAU;wBAAW,OAAO;oBAAO;8BAC7C,MAAM,IAAI,CAAC,IAAI;;;;;;8BAEpB,6LAAC;;;;;gBACA,MAAM,IAAI,CAAC,IAAI;;;;;;;;;;;;AAIhC;KAZM;AAcN,MAAM,gBAAgB;;IAClB,MAAM,aAA2B,yGAAW;IAC5C,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,yKAAQ,EAAoB;IACtE,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,yKAAQ,EAAS;IAErD,MAAM,eAAe,CAAC,QAAa;QAC/B,MAAM,QAAQ,SAAS,WAAW;QAClC,MAAM,SAAS,OAAO,IAAI;QAC1B,0DAA0D;QAC1D,OACI,OAAO,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,UACrC,OAAO,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAE7C;IAEA,MAAM,eAAe,CACjB,UACA;QAEA,iBAAiB;IACrB;IAEA,qBACI,6LAAC;QAAI,OAAO;YAAE,OAAO;YAAS,QAAQ;QAAO;kBACzC,cAAA,6LAAC,+LAAM;YACH,YAAW;YACX,OAAO;YACP,UAAU;YACV,SAAS;YACT,SAAS,aAAa,aAAa,EAAE;YACrC,eAAe,CAAC,QAAU,cAAc;YACxC,gBAAgB,CAAC,SAAW,OAAO,IAAI;YACvC,gBAAgB,CAAC,SAAW,OAAO,EAAE,CAAC,QAAQ;YAC9C,aAAY;YACZ,cAAc;YACd,cAAc;YACd,kBAAkB,IACd,aAAa,gBAAgB;YAGjC,YAAY;gBACR,mBAAmB,IAAM;gBACzB,oBAAoB,IAAM;gBAC1B,QAAQ;YACZ;;;;;;;;;;;AAIhB;GAhDM;MAAA;uCAkDS","debugId":null}}]
}