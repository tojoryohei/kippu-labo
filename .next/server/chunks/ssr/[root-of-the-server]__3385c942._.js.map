{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///home/tojoryohei/my-app/src/component/SerectStation.tsx"],"sourcesContent":["\"use client\";\n\nimport Select, { components, OptionProps } from \"react-select\";\nimport { useState } from \"react\";\nimport stationData from '@/data/station.json';\n\nexport interface OptionType {\n    \"id\": number;\n    \"name\": string;\n    \"kana\": string;\n}\n\nconst CustomOption = (props: OptionProps<OptionType>) => {\n    return (\n        <components.Option {...props}>\n            <div style={{ lineHeight: 1.2 }}>\n                <span style={{ fontSize: \"0.75rem\", color: \"#888\" }}>\n                    {props.data.kana}\n                </span>\n                <br />\n                {props.data.name}\n            </div>\n        </components.Option>\n    );\n};\n\nconst SelectStation = () => {\n    const allOptions: OptionType[] = [{\n        \"id\": 130229,\n        \"name\": \"八軒\",\n        \"kana\": \"はちけん\"\n    },\n    {\n        \"id\": 130226,\n        \"name\": \"新川\",\n        \"kana\": \"しんかわ\"\n    }];\n\n    const [selectedValue, setSelectedValue] = useState<OptionType | null>(null);\n    const [inputValue, setInputValue] = useState<string>(\"\");\n    const handleChange = (option: OptionType | null) => {\n        setSelectedValue(option);\n    };\n\n    const filterOption = (option: any, rawInput: string) => {\n        const input = rawInput.toLowerCase();\n        const target = option.data as OptionType;\n        return (\n            target.name.toLowerCase().includes(input) ||\n            target.kana.toLowerCase().includes(input)\n        );\n    };\n\n    return (\n        <div style={{ width: \"500px\", margin: \"25px\" }}>\n            <Select\n                instanceId=\"search-select-box\"\n                value={selectedValue}\n                onChange={handleChange}\n                options={inputValue ? allOptions : []}\n                onInputChange={(input) => setInputValue(input)}\n                getOptionLabel={(option) => option.name}\n                getOptionValue={(option) => option.id.toString()}\n                placeholder=\"駅を検索...\"\n                isSearchable={true}\n                filterOption={filterOption}\n                noOptionsMessage={() => \"該当する駅がありません\"}\n\n                components={{\n                    DropdownIndicator: () => null,  // 矢印ボタンを非表示\n                    IndicatorSeparator: () => null, // 区切り線を非表示\n                    Option: CustomOption,           // 候補の見た目を自作のものに差し替え\n                }}\n            />\n        </div>\n    );\n};\n\nexport default SelectStation;\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AAHA;;;;AAYA,MAAM,eAAe,CAAC;IAClB,qBACI,2PAAC,oNAAU,CAAC,MAAM;QAAE,GAAG,KAAK;kBACxB,cAAA,2PAAC;YAAI,OAAO;gBAAE,YAAY;YAAI;;8BAC1B,2PAAC;oBAAK,OAAO;wBAAE,UAAU;wBAAW,OAAO;oBAAO;8BAC7C,MAAM,IAAI,CAAC,IAAI;;;;;;8BAEpB,2PAAC;;;;;gBACA,MAAM,IAAI,CAAC,IAAI;;;;;;;;;;;;AAIhC;AAEA,MAAM,gBAAgB;IAClB,MAAM,aAA2B;QAAC;YAC9B,MAAM;YACN,QAAQ;YACR,QAAQ;QACZ;QACA;YACI,MAAM;YACN,QAAQ;YACR,QAAQ;QACZ;KAAE;IAEF,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,8NAAQ,EAAoB;IACtE,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,8NAAQ,EAAS;IACrD,MAAM,eAAe,CAAC;QAClB,iBAAiB;IACrB;IAEA,MAAM,eAAe,CAAC,QAAa;QAC/B,MAAM,QAAQ,SAAS,WAAW;QAClC,MAAM,SAAS,OAAO,IAAI;QAC1B,OACI,OAAO,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,UACnC,OAAO,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;IAE3C;IAEA,qBACI,2PAAC;QAAI,OAAO;YAAE,OAAO;YAAS,QAAQ;QAAO;kBACzC,cAAA,2PAAC,4LAAM;YACH,YAAW;YACX,OAAO;YACP,UAAU;YACV,SAAS,aAAa,aAAa,EAAE;YACrC,eAAe,CAAC,QAAU,cAAc;YACxC,gBAAgB,CAAC,SAAW,OAAO,IAAI;YACvC,gBAAgB,CAAC,SAAW,OAAO,EAAE,CAAC,QAAQ;YAC9C,aAAY;YACZ,cAAc;YACd,cAAc;YACd,kBAAkB,IAAM;YAExB,YAAY;gBACR,mBAAmB,IAAM;gBACzB,oBAAoB,IAAM;gBAC1B,QAAQ;YACZ;;;;;;;;;;;AAIhB;uCAEe","debugId":null}}]
}